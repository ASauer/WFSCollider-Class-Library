For Beta 2 - to be released in December before workshop ?

Bugs:
 - Stuff not releasing correctly. pointing to empty array, should be nil.

TODO:
 - Make UCHainGUI like GUI for UScore, to change startime of innerscore.
 - MassEdit - add and remove units.
 - MassUChain editor should allow to edit multiple paths, at least to be able to plot them. -W
 - UMixer for session
 - Documentation: schelp files for classes. STARTED

 Less priority:
 - cpu wfsservers view.
 - supernova. STARTED - CPU usage issues.
 - nested chains/ UChain groups
 - invent fixed extension names for Trajectory, and perhaps also for UEvent files.
 - Cut events - u_trimStart, u_trimEnd.
 - implement cutting sub-scores
 - Right-click menu
 - inner score looping.
 - Move WFSPath stuff into UTrajectory, etc. I really think we should do this, this is a great class, and it can be used by people using ambisonics and VBAP. It could easilly become the standard trajectory stuff for supercollider.

Done:
 X- Multiple panners, where some only play on one server, sometimes don't free the chain on one server. This also affects Load balancing.
 X- make ScoreEditor redraw when duration or startTime of UChain changes.
 X- Cleanup: remove unused files. Check if there are unused methods. Check if there is code that can (easilly) be made more elegant.
 X- UDef code editing - allow forking code to new Udef.
 X- remove MetaUdef -M, W?
 X- audio solo button on mixer
 X- USessionGUI, UChainGroup, USessionList - make it more functional. Drag and Drop.
   X - take elements from USession into score.
   X - Reorder elements in USession
 X - Templates with Groups of Chains. -> UnitRack
 X - Mass editor - set infinite for all
 X - update cmake. - wait for Quark situation.
 X - offline panners.
 X - Move Unit stuff into a Quark, import the quark into WFSCollider (change cmake file).


UnitRack -> a group of units with certain values set

doesnt work...
{ Out.ar( \bus.kr(0), Pan2.ar( (UGlobalEQ.ar( WhiteNoise.ar*0.1 ) * UEnv.kr), \pos.kr(0) ) ) }.play;
works
{ Out.ar( \bus.kr(0), Pan2.ar( (UGlobalEQ.ar( WhiteNoise.ar*0.1 ) * UEnv.kr).at(0), \pos.kr(0) ) ) }.play;