/*
\wfsMirrorPoint

a Udef for mirroring a point along a line. This udef can be put after a wfsPathPlayer or other wfs_control generator, for example to generate a position for a reflection.

plane: a Point object, specifying center the position of the line
pointFromBus: (Boolean) set to true (default) if you want to use the position generated by another unit in the UChain
point: a Point object, specifying the position to be mirrored if pointFromBus is set to false

--
this is an Udef definition file
part of the WFSCollider Class Library default Udefs set
*/

Udef(\wfsMirrorPoint,
    { |plane = #[0,0], pointFromBus = 1, point = #[0,0]| 
	    point = (point * (1-pointFromBus)) + ( UIn.kr(0,2) * pointFromBus );
	   plane = plane.asPoint.asPolar;
	   point = point.asPoint.rotate( plane.angle.neg );
	   point.x = (plane.rho * 2) - point.x;
	   point = point.rotate( plane.angle );
	   UOut.kr(0, point.asArray) 
}, [
    [ \plane: 0@0, WFSPlaneSpec( 200, 0.1 ) ],
    [ \pointFromBus: true, BoolSpec(true) ],
    [ \point: 0@0, WFSPointSpec( 200, 0.1 ) ],
]
).category_( 'wfs_control' )
.setControlInName( [0,1], ['x', 'y'] )
.setControlOutName( [0,1], ['x', 'y'] );

